export type { AccelerateInfo, AcceleratePromise, PrismaCacheStrategy, } from "./extension.js";
export declare function withAccelerate(): (client: any) => import("@prisma/client/scripts/default-index.js").PrismaClientExtends<import("@prisma/client/runtime/library.js").InternalArgs<{}, {
    $allModels: {
        aggregate<T, A>(this: T, args: import("@prisma/client/runtime/library.js").Exact<A, import("@prisma/client/runtime/library.js").Args_3<T, "aggregate"> & import("./extension.js").PrismaCacheStrategy>): import("./extension.js").AcceleratePromise<import("@prisma/client/runtime/library.js").Result_2<T, A, "aggregate">>;
        count<T_1, A_1>(this: T_1, args?: import("@prisma/client/runtime/library.js").Exact<A_1, import("@prisma/client/runtime/library.js").Args_3<T_1, "count"> & import("./extension.js").PrismaCacheStrategy> | undefined): import("./extension.js").AcceleratePromise<import("@prisma/client/runtime/library.js").Result_2<T_1, A_1, "count">>;
        findFirst<T_2, A_2>(this: T_2, args?: import("@prisma/client/runtime/library.js").Exact<A_2, import("@prisma/client/runtime/library.js").Args_3<T_2, "findFirst"> & import("./extension.js").PrismaCacheStrategy> | undefined): import("./extension.js").AcceleratePromise<import("@prisma/client/runtime/library.js").Result_2<T_2, A_2, "findFirst"> | null>;
        findFirstOrThrow<T_3, A_3>(this: T_3, args?: import("@prisma/client/runtime/library.js").Exact<A_3, import("@prisma/client/runtime/library.js").Args_3<T_3, "findFirstOrThrow"> & import("./extension.js").PrismaCacheStrategy> | undefined): import("./extension.js").AcceleratePromise<import("@prisma/client/runtime/library.js").Result_2<T_3, A_3, "findFirstOrThrow">>;
        findMany<T_4, A_4>(this: T_4, args?: import("@prisma/client/runtime/library.js").Exact<A_4, import("@prisma/client/runtime/library.js").Args_3<T_4, "findMany"> & import("./extension.js").PrismaCacheStrategy> | undefined): import("./extension.js").AcceleratePromise<import("@prisma/client/runtime/library.js").Result_2<T_4, A_4, "findMany">>;
        findUnique<T_5, A_5>(this: T_5, args: import("@prisma/client/runtime/library.js").Exact<A_5, import("@prisma/client/runtime/library.js").Args_3<T_5, "findUnique"> & import("./extension.js").PrismaCacheStrategy>): import("./extension.js").AcceleratePromise<import("@prisma/client/runtime/library.js").Result_2<T_5, A_5, "findUnique"> | null>;
        findUniqueOrThrow<T_6, A_6>(this: T_6, args: import("@prisma/client/runtime/library.js").Exact<A_6, import("@prisma/client/runtime/library.js").Args_3<T_6, "findUniqueOrThrow"> & import("./extension.js").PrismaCacheStrategy>): import("./extension.js").AcceleratePromise<import("@prisma/client/runtime/library.js").Result_2<T_6, A_6, "findUniqueOrThrow">>;
        groupBy<T_7, A_7>(this: T_7, args: import("@prisma/client/runtime/library.js").Exact<A_7, import("@prisma/client/runtime/library.js").Args_3<T_7, "groupBy"> & import("./extension.js").PrismaCacheStrategy>): import("./extension.js").AcceleratePromise<import("@prisma/client/runtime/library.js").Result_2<T_7, A_7, "groupBy">>;
    };
}, {}, {}> & import("@prisma/client/runtime/library.js").InternalArgs<{}, {}, {}, {}> & import("@prisma/client/runtime/library.js").DefaultArgs>;
